{"ast":null,"code":"import { SQLite } from '@ionic-native/sqlite/ngx';\nimport { Platform } from '@ionic/angular';\nimport { Device } from '@ionic-native/device/ngx';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic-native/sqlite/ngx\";\nimport * as i2 from \"@ionic/angular\";\nimport * as i3 from \"@ionic-native/device/ngx\";\nexport let SqliteService = /*#__PURE__*/(() => {\n  class SqliteService {\n    constructor(sqLite, platform, device) {\n      this.sqLite = sqLite;\n      this.platform = platform;\n      this.device = device;\n    }\n    initDb() {\n      if (this.platform.is('android')) {\n        this.dbConfig = {\n          name: 'abtenau.db',\n          location: 'default'\n        };\n      } else {\n        this.dbConfig = {\n          name: 'abtenau.db',\n          iosDatabaseLocation: 'Library'\n        };\n      }\n      if (this.device.cordova != null && (this.platform.is('android') || this.platform.is('ios'))) {\n        this.sqLite.create(this.dbConfig).then(db => {\n          /*db.executeSql('DROP TABLE IF EXISTS api_content', [])\n                  .then(() => console.log('Drop table if exists content'))\n                  .catch(e => console.log(JSON.stringify(e)));*/\n          console.log('Database created.');\n          db.executeSql('CREATE TABLE IF NOT EXISTS api_content (content_id INTEGER PRIMARY KEY, api_path TEXT, api_data TEXT)').then(() => {}).catch(e => console.log(e));\n          this.db = db;\n        }).catch(e => console.log(e));\n      }\n    }\n  }\n  SqliteService.ɵfac = function SqliteService_Factory(t) {\n    return new (t || SqliteService)(i0.ɵɵinject(i1.SQLite), i0.ɵɵinject(i2.Platform), i0.ɵɵinject(i3.Device));\n  };\n  SqliteService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SqliteService,\n    factory: SqliteService.ɵfac,\n    providedIn: 'root'\n  });\n  return SqliteService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}