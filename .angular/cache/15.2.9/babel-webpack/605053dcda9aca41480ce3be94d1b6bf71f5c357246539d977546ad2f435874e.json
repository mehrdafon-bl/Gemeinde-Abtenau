{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { Deploy } from 'cordova-plugin-ionic/dist/ngx';\nimport { AlertController } from '@ionic/angular';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"cordova-plugin-ionic/dist/ngx\";\nimport * as i2 from \"@ionic/angular\";\nexport let LiveupdateService = /*#__PURE__*/(() => {\n  class LiveupdateService {\n    constructor(ionicDeploy, alertController) {\n      this.ionicDeploy = ionicDeploy;\n      this.alertController = alertController;\n      this.showUpdateProcess = false;\n    }\n    showAlertUpdateAvaliable() {\n      return __awaiter(this, void 0, void 0, function* () {\n        const alert = yield this.alertController.create({\n          header: 'Eine neue App-Version',\n          message: 'Die App wird im Hintergund aktualisiert und neugeladen.',\n          buttons: [{\n            text: 'OK',\n            handler: () => {\n              this.performUpdate();\n            }\n          }]\n        });\n        yield alert.present();\n      });\n    }\n    checkForUpdates(time) {\n      return __awaiter(this, void 0, void 0, function* () {\n        const update = yield this.ionicDeploy.checkForUpdate();\n        if (update.available) {\n          setTimeout(() => {\n            this.showAlertUpdateAvaliable();\n            this.build = update.build;\n          }, time);\n        } else {\n          const currentConfiguration = this.ionicDeploy.getConfiguration();\n          currentConfiguration.then(conf => {\n            this.build = conf.currentBuildId;\n          });\n        }\n      });\n    }\n    performUpdate() {\n      return __awaiter(this, void 0, void 0, function* () {\n        yield this.ionicDeploy.downloadUpdate(progress => {\n          this.showUpdateProcess = true;\n          this.updateProcessType = 'Herunterladen';\n          this.updateProgress = progress;\n        });\n        yield this.ionicDeploy.extractUpdate(progress => {\n          this.updateProcessType = 'Exportieren';\n          this.updateProgress = progress;\n        });\n        yield this.ionicDeploy.reloadApp();\n      });\n    }\n  }\n  LiveupdateService.ɵfac = function LiveupdateService_Factory(t) {\n    return new (t || LiveupdateService)(i0.ɵɵinject(i1.Deploy), i0.ɵɵinject(i2.AlertController));\n  };\n  LiveupdateService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LiveupdateService,\n    factory: LiveupdateService.ɵfac,\n    providedIn: 'root'\n  });\n  return LiveupdateService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}