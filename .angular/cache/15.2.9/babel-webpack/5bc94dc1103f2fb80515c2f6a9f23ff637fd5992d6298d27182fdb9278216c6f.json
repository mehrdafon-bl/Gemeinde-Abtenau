{"ast":null,"code":"import { ApiService } from '../api.service';\nimport { SqliteService } from '../sqlite.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../api.service\";\nimport * as i2 from \"../sqlite.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@ionic/angular\";\nfunction OfficialBoardPage_ng_container_10_ion_item_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-item\", 6);\n    i0.ɵɵlistener(\"click\", function OfficialBoardPage_ng_container_10_ion_item_2_Template_ion_item_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const data_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r3.api.openUrl(data_r2.url));\n    });\n    i0.ɵɵelementStart(1, \"ion-label\", 7)(2, \"strong\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const data_r2 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(data_r2.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(data_r2.content);\n  }\n}\nfunction OfficialBoardPage_ng_container_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"ion-list\");\n    i0.ɵɵtemplate(2, OfficialBoardPage_ng_container_10_ion_item_2_Template, 6, 2, \"ion-item\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.boardItems);\n  }\n}\nexport let OfficialBoardPage = /*#__PURE__*/(() => {\n  class OfficialBoardPage {\n    constructor(api, sqLite) {\n      this.api = api;\n      this.sqLite = sqLite;\n      this.boardItems = [];\n      this.boardItemsRaw = [];\n      this.refresherEvent = [];\n    }\n    ngOnInit() {}\n    ionViewDidEnter() {\n      this.getApiData();\n    }\n    getApiData(isRefresher = false) {\n      this.sqLite.initDb();\n      const api = this.api.get('/official-board', isRefresher ? false : true);\n      api.subscribe(next => {\n        this.boardItems = next.data.officialBoard;\n        this.boardItemsRaw = this.boardItems;\n        this.sqLite.db.executeSql('SELECT * FROM api_content WHERE api_path = ?', ['official-board']).then(data => {\n          if (data.rows.length > 1 || data.rows.length < 1) {\n            this.sqLite.db.executeSql('DELETE FROM api_content WHERE api_path = ?', ['official-board']).then(() => {\n              this.sqLite.db.executeSql('INSERT INTO api_content (api_path, api_data) VALUES(?,?)', ['official-board', JSON.stringify(this.boardItems)]).then(() => {}).catch(ei => console.log('#insert dberror: ' + JSON.stringify(ei)));\n            }).catch(ed => console.log('#delete dberror: ' + JSON.stringify(ed)));\n          } else {\n            this.sqLite.db.executeSql('UPDATE api_content SET api_data = ? WHERE api_path = ?', [JSON.stringify(this.boardItems), 'official-board']).then(() => {}).catch(eu => console.log('#update dberror: ' + JSON.stringify(eu)));\n          }\n        }).catch(es => {\n          console.log('#select dberror: ' + JSON.stringify(es));\n          this.sqLite.db.executeSql('INSERT INTO api_content (api_path, api_data) VALUES(?,?)', ['official-board', JSON.stringify(this.boardItems)]).then(() => {}).catch(ei => console.log('#insert dberror: ' + JSON.stringify(ei)));\n        });\n        if (isRefresher) {\n          this.refresherEvent.target.complete();\n        }\n      }, error => {\n        console.log(error);\n        if (isRefresher) {\n          this.refresherEvent.target.complete();\n        }\n        this.sqLite.db.executeSql('SELECT * FROM api_content WHERE api_path = ?', ['official-board']).then(data => {\n          for (let i = 0; i < data.rows.length; i++) {\n            this.boardItems = JSON.parse(data.rows.item(i).api_data);\n            this.boardItemsRaw = this.boardItems;\n          }\n        }).catch(es => console.log('#select error: ' + JSON.stringify(es)));\n      });\n    }\n    doRefresh(event) {\n      this.refresherEvent = event;\n      this.getApiData(true);\n    }\n    searchItems(ev) {\n      const q = ev.target.value;\n      this.boardItems = this.boardItemsRaw;\n      if (q && q.trim() !== '') {\n        this.boardItems = this.boardItems.filter(item => {\n          if (q && q.trim() !== '') {\n            if (item.title.toLowerCase().indexOf(q.toLowerCase()) > -1) {\n              return true;\n            } else if (item.content.toLowerCase().indexOf(q.toLowerCase()) > -1) {\n              return true;\n            }\n          }\n        });\n      } else {\n        this.boardItems = this.boardItemsRaw;\n      }\n    }\n  }\n  OfficialBoardPage.ɵfac = function OfficialBoardPage_Factory(t) {\n    return new (t || OfficialBoardPage)(i0.ɵɵdirectiveInject(i1.ApiService), i0.ɵɵdirectiveInject(i2.SqliteService));\n  };\n  OfficialBoardPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: OfficialBoardPage,\n    selectors: [[\"app-official-board\"]],\n    decls: 11,\n    vars: 2,\n    consts: [[3, \"translucent\"], [\"slot\", \"start\"], [\"placeholder\", \"Amtstafel durchsuchen\", 3, \"ionInput\"], [\"slot\", \"fixed\", 3, \"ionRefresh\"], [4, \"ngIf\"], [3, \"click\", 4, \"ngFor\", \"ngForOf\"], [3, \"click\"], [1, \"ion-text-wrap\"]],\n    template: function OfficialBoardPage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-header\", 0)(1, \"ion-toolbar\")(2, \"ion-buttons\", 1);\n        i0.ɵɵelement(3, \"ion-menu-button\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"ion-title\");\n        i0.ɵɵtext(5, \"Amtstafel\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"ion-searchbar\", 2);\n        i0.ɵɵlistener(\"ionInput\", function OfficialBoardPage_Template_ion_searchbar_ionInput_6_listener($event) {\n          return ctx.searchItems($event);\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"ion-content\")(8, \"ion-refresher\", 3);\n        i0.ɵɵlistener(\"ionRefresh\", function OfficialBoardPage_Template_ion_refresher_ionRefresh_8_listener($event) {\n          return ctx.doRefresh($event);\n        });\n        i0.ɵɵelement(9, \"ion-refresher-content\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(10, OfficialBoardPage_ng_container_10_Template, 3, 1, \"ng-container\", 4);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"translucent\", true);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngIf\", ctx.boardItems);\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgIf, i4.IonButtons, i4.IonContent, i4.IonHeader, i4.IonItem, i4.IonLabel, i4.IonList, i4.IonMenuButton, i4.IonRefresher, i4.IonRefresherContent, i4.IonSearchbar, i4.IonTitle, i4.IonToolbar, i4.TextValueAccessor]\n  });\n  return OfficialBoardPage;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}