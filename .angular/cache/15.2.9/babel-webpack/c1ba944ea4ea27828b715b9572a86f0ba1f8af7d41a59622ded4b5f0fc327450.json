{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { AwesomeCordovaNativePlugin, cordovaPropertyGet, cordovaPropertySet } from '@awesome-cordova-plugins/core';\nimport * as ɵngcc0 from '@angular/core';\nvar Device = /** @class */function (_super) {\n  __extends(Device, _super);\n  function Device() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Object.defineProperty(Device.prototype, \"cordova\", {\n    get: function () {\n      return cordovaPropertyGet(this, \"cordova\");\n    },\n    set: function (value) {\n      cordovaPropertySet(this, \"cordova\", value);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Device.prototype, \"model\", {\n    get: function () {\n      return cordovaPropertyGet(this, \"model\");\n    },\n    set: function (value) {\n      cordovaPropertySet(this, \"model\", value);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Device.prototype, \"platform\", {\n    get: function () {\n      return cordovaPropertyGet(this, \"platform\");\n    },\n    set: function (value) {\n      cordovaPropertySet(this, \"platform\", value);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Device.prototype, \"uuid\", {\n    get: function () {\n      return cordovaPropertyGet(this, \"uuid\");\n    },\n    set: function (value) {\n      cordovaPropertySet(this, \"uuid\", value);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Device.prototype, \"version\", {\n    get: function () {\n      return cordovaPropertyGet(this, \"version\");\n    },\n    set: function (value) {\n      cordovaPropertySet(this, \"version\", value);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Device.prototype, \"manufacturer\", {\n    get: function () {\n      return cordovaPropertyGet(this, \"manufacturer\");\n    },\n    set: function (value) {\n      cordovaPropertySet(this, \"manufacturer\", value);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Device.prototype, \"isVirtual\", {\n    get: function () {\n      return cordovaPropertyGet(this, \"isVirtual\");\n    },\n    set: function (value) {\n      cordovaPropertySet(this, \"isVirtual\", value);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Device.prototype, \"serial\", {\n    get: function () {\n      return cordovaPropertyGet(this, \"serial\");\n    },\n    set: function (value) {\n      cordovaPropertySet(this, \"serial\", value);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Device.prototype, \"sdkVersion\", {\n    get: function () {\n      return cordovaPropertyGet(this, \"sdkVersion\");\n    },\n    set: function (value) {\n      cordovaPropertySet(this, \"sdkVersion\", value);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Device.pluginName = \"Device\";\n  Device.plugin = \"cordova-plugin-device\";\n  Device.pluginRef = \"device\";\n  Device.repo = \"https://github.com/apache/cordova-plugin-device\";\n  Device.platforms = [\"Android\", \"Browser\", \"iOS\", \"macOS\", \"Windows\"];\n  Device.ɵfac = /*@__PURE__*/function () {\n    var ɵDevice_BaseFactory;\n    return function Device_Factory(t) {\n      return (ɵDevice_BaseFactory || (ɵDevice_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(Device)))(t || Device);\n    };\n  }();\n  Device.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: Device,\n    factory: function (t) {\n      return Device.ɵfac(t);\n    }\n  });\n  (function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n  })();\n  return Device;\n}(AwesomeCordovaNativePlugin);\nexport { Device };\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9AYXdlc29tZS1jb3Jkb3ZhLXBsdWdpbnMvcGx1Z2lucy9kZXZpY2Uvbmd4L2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sc0VBQXVELE1BQU0sK0JBQStCLENBQUM7O0FBQ3BHO0FBSWUsSUF1QmEsMEJBQTBCO0FBQUM7QUFDakM7QUFFUDtBQUVkLDBCQUZDLDJCQUFPO0FBQUk7QUFHZ0Q7QUFDWDtBQUEyQjtBQUVyRTtBQUFRLDBCQUNkLHlCQUFLO0FBQUk7QUFHSztBQUdtQztBQUNyQztBQUdYO0FBQVEsMEJBTlQsNEJBQVE7QUFBSTtBQUdWO0FBSUQ7QUFDTTtBQUVPO0FBQVEsMEJBTnRCLHdCQUFJO0FBQUk7QUFJVjtBQUdnQjtBQUNNO0FBRUU7QUFBUSwwQkFOOUIsMkJBQU87QUFBSTtBQUlQO0FBR0Q7QUFDTTtBQUVJO0FBQVEsMEJBTnJCLGdDQUFZO0FBQUk7QUFHRDtBQUlSO0FBQ007QUFFUTtBQUFRLDBCQU43Qiw2QkFBUztBQUFJO0FBR0s7QUFHeUM7QUFFeEQ7QUFFRTtBQUFRLDBCQU5iLDBCQUFNO0FBQUk7QUFHUjtBQUdnQztBQUEyQjtBQUEyQjtBQUFRLDBCQUZoRyw4QkFBVTtBQUFJO0FBRW9EO0FBQWtGO0FBQTJCO0FBQTJCO0FBQVE7QUFBa0M7QUFBNkM7QUFBaUM7QUFBcUU7MENBekN4WSxVQUFVOzs7OzBCQUNMO0FBQUMsaUJBN0JQO0FBQUUsRUE2QjBCLDBCQUEwQjtBQUNyRCxTQURZLE1BQU07QUFBSSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvcmRvdmFQcm9wZXJ0eSwgQXdlc29tZUNvcmRvdmFOYXRpdmVQbHVnaW4sIFBsdWdpbiB9IGZyb20gJ0Bhd2Vzb21lLWNvcmRvdmEtcGx1Z2lucy9jb3JlJztcblxuZGVjbGFyZSBjb25zdCB3aW5kb3c6IGFueTtcblxuLyoqXG4gKiBAbmFtZSBEZXZpY2VcbiAqIEBwcmVtaWVyIGRldmljZVxuICogQGRlc2NyaXB0aW9uXG4gKiBBY2Nlc3MgaW5mb3JtYXRpb24gYWJvdXQgdGhlIHVuZGVybHlpbmcgZGV2aWNlIGFuZCBwbGF0Zm9ybS5cbiAqIEB1c2FnZVxuICogYGBgdHlwZXNjcmlwdFxuICogaW1wb3J0IHsgRGV2aWNlIH0gZnJvbSAnQGF3ZXNvbWUtY29yZG92YS1wbHVnaW5zL2RldmljZS9uZ3gnO1xuICpcbiAqIGNvbnN0cnVjdG9yKHByaXZhdGUgZGV2aWNlOiBEZXZpY2UpIHsgfVxuICpcbiAqIC4uLlxuICpcbiAqIGNvbnNvbGUubG9nKCdEZXZpY2UgVVVJRCBpczogJyArIHRoaXMuZGV2aWNlLnV1aWQpO1xuICogYGBgXG4gKi9cbkBQbHVnaW4oe1xuICBwbHVnaW5OYW1lOiAnRGV2aWNlJyxcbiAgcGx1Z2luOiAnY29yZG92YS1wbHVnaW4tZGV2aWNlJyxcbiAgcGx1Z2luUmVmOiAnZGV2aWNlJyxcbiAgcmVwbzogJ2h0dHBzOi8vZ2l0aHViLmNvbS9hcGFjaGUvY29yZG92YS1wbHVnaW4tZGV2aWNlJyxcbiAgcGxhdGZvcm1zOiBbJ0FuZHJvaWQnLCAnQnJvd3NlcicsICdpT1MnLCAnbWFjT1MnLCAnV2luZG93cyddLFxufSlcbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBEZXZpY2UgZXh0ZW5kcyBBd2Vzb21lQ29yZG92YU5hdGl2ZVBsdWdpbiB7XG4gIC8qKiBHZXQgdGhlIHZlcnNpb24gb2YgQ29yZG92YSBydW5uaW5nIG9uIHRoZSBkZXZpY2UuICovXG4gIEBDb3Jkb3ZhUHJvcGVydHkoKVxuICBjb3Jkb3ZhOiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIFRoZSBkZXZpY2UubW9kZWwgcmV0dXJucyB0aGUgbmFtZSBvZiB0aGUgZGV2aWNlJ3MgbW9kZWwgb3IgcHJvZHVjdC4gVGhlIHZhbHVlIGlzIHNldFxuICAgKiBieSB0aGUgZGV2aWNlIG1hbnVmYWN0dXJlciBhbmQgbWF5IGJlIGRpZmZlcmVudCBhY3Jvc3MgdmVyc2lvbnMgb2YgdGhlIHNhbWUgcHJvZHVjdC5cbiAgICovXG4gIEBDb3Jkb3ZhUHJvcGVydHkoKVxuICBtb2RlbDogc3RyaW5nO1xuXG4gIC8qKiBHZXQgdGhlIGRldmljZSdzIG9wZXJhdGluZyBzeXN0ZW0gbmFtZS4gKi9cbiAgQENvcmRvdmFQcm9wZXJ0eSgpXG4gIHBsYXRmb3JtOiBzdHJpbmc7XG5cbiAgLyoqIEdldCB0aGUgZGV2aWNlJ3MgVW5pdmVyc2FsbHkgVW5pcXVlIElkZW50aWZpZXIgKFVVSUQpLiAqL1xuICBAQ29yZG92YVByb3BlcnR5KClcbiAgdXVpZDogc3RyaW5nO1xuXG4gIC8qKiBHZXQgdGhlIG9wZXJhdGluZyBzeXN0ZW0gdmVyc2lvbi4gKi9cbiAgQENvcmRvdmFQcm9wZXJ0eSgpXG4gIHZlcnNpb246IHN0cmluZztcblxuICAvKiogR2V0IHRoZSBkZXZpY2UncyBtYW51ZmFjdHVyZXIuICovXG4gIEBDb3Jkb3ZhUHJvcGVydHkoKVxuICBtYW51ZmFjdHVyZXI6IHN0cmluZztcblxuICAvKiogV2hldGhlciB0aGUgZGV2aWNlIGlzIHJ1bm5pbmcgb24gYSBzaW11bGF0b3IuICovXG4gIEBDb3Jkb3ZhUHJvcGVydHkoKVxuICBpc1ZpcnR1YWw6IGJvb2xlYW47XG5cbiAgLyoqIEdldCB0aGUgZGV2aWNlIGhhcmR3YXJlIHNlcmlhbCBudW1iZXIuICovXG4gIEBDb3Jkb3ZhUHJvcGVydHkoKVxuICBzZXJpYWw6IHN0cmluZztcblxuICAvKiogR2V0IHRoZSBBbmRyb2lkIGRldmljZSdzIFNESyB2ZXJzaW9uLiAoQW5kcm9pZC1vbmx5KSAqL1xuICBAQ29yZG92YVByb3BlcnR5KClcbiAgc2RrVmVyc2lvbj86IHN0cmluZztcbn1cbiJdfQ==","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}